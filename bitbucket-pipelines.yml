image: node:24.5.0

options:
  max-time: 5

definitions:
  services:
    docker:
      memory: 6000
  caches:
    sonar: ~/.sonar/cache
    pnpm: $BITBUCKET_CLONE_DIR/.pnpm-store
  steps:
    - step: &lint-test-build
        name: Lint, tests and build
        caches:
          - pnpm
          - sonar
          - docker # used by sonar pipes
        size: 4x # needed for additional memory requirements
        clone:
          depth: full # SonarCloud scanner needs the full history to assign issues properly
        script:
          - npm install -g corepack
          - corepack enable
          - pnpm install
          - pnpm ci:lint-format
          - pnpm build
          - pnpm coverage
          - pnpm run audit
          - pipe: sonarsource/sonarcloud-scan:2.0.0
            variables:
              SONAR_SCANNER_OPTS: -Xmx4G
          # - pipe: sonarsource/sonarcloud-quality-gate:0.1.6
          - cd documentation
          - pnpm dlx chromatic --exit-once-uploaded --auto-accept-changes
        artifacts:
          - documentation/dist/**
          - packages/styles/dist/**
          - packages/components/dist/**
    - step: &publish-npm
        name: Publish packages to npm and increase patch version
        caches:
          - pnpm
        trigger: manual
        deployment: production
        script:
          - npm install -g corepack
          - corepack enable
          - pnpm install --frozen-lockfile
          # For now we keep it simple and keep all packages (including root) in sync with the same version, so we bump root and set all packages to the resulting version
          - NEW_VERSION=$(pnpm version patch --no-git-tag-version 2>/dev/null) || { echo "Version bump failed" >&2; exit 1; }
          - NEW_VERSION=${NEW_VERSION#v}
          - pnpm -r exec pnpm version "$NEW_VERSION" --no-git-tag-version
          - git add -A
          - HUSKY=0 git commit -m "Bump version to v$NEW_VERSION [skip ci]"
          - git tag "v$NEW_VERSION" -m "v$NEW_VERSION"
          - git push --follow-tags
          # Publish packages after version bump, can't use atlassian/npm-publish pipe here, because it does not support monorepos
          - test -n "$NPM_TOKEN" || { echo "NPM_TOKEN is not set" >&2; exit 1; }
          - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
          - pnpm run publish

pipelines:
  pull-requests:
    "**":
      - step: *lint-test-build
      - step: *publish-npm
  branches:
    master:
      - step: *lint-test-build
